#!/bin/bash

DB='sqlite.db'
FIXEDDB='sqlite_fixed.db'

echo "Making required directories..."
mkdir bin
mkdir outputnaive
echo "Removing old class files..."
rm -v bin/*.class
echo "Removing old user jar files..."
rm -v lib/TFIDF.jar
echo "Removing old output..."
rm -vr outputnaive/*
echo "Compiling TFIDFIndex.java..."
javac -sourcepath src/java -d bin src/java/Stemmer.java src/java/TFIDFIndex.java src/java/Util.java
echo "Building TFIDF.jar"
jar -cf lib/TFIDF.jar -C bin Stemmer.class -C bin TFIDFIndex.class -C bin TFIDFIndex\$QueryResult.class -C bin Util.class
echo "Compiling BuildNaiveModelFiles.java..."
javac -sourcepath src/java -cp lib/joda-time-1.6.jar:lib/sqlitejdbc-v056.jar -d bin src/java/BuildNaiveModelFiles.java
echo "Filling database with new navigations..."
python src/python/buildCorrectDb.py data/$DB data/scrolls-manualCorrection.txt data/navs-manualCorrection.txt data/$FIXEDDB
echo "Executing BuildNaiveModelFiles.java..."
java -cp bin:lib/joda-time-1.6.jar:lib/sqlitejdbc-v056.jar BuildNaiveModelFiles outputnaive

THREADS=0
COUNTER=1
MAX=99

echo "Creating document repository for TF-IDF method..."
while [  $COUNTER -lt $MAX ]; do
    python src/python/createDocs.py outputnaive/nav_$COUNTER/$FIXEDDB outputnaive/docs_$COUNTER &
    let THREADS=THREADS+1
    if [ $THREADS == 4 ]; then
        wait
        THREADS=0
    fi
    let COUNTER=COUNTER+1 
done
wait

COUNTER=1
while [  $COUNTER -lt $MAX ]; do
    echo "Building navigation files..."
    python src/python/createNavFiles.py outputnaive/nav_$COUNTER/$FIXEDDB outputnaive/nav_$COUNTER/previous.txt outputnaive/docs_$COUNTER
    let COUNTER=COUNTER+1 
done

THREADS=0
COUNTER=1

echo "Scoring methods with TF-IDF..."
while [  $COUNTER -lt $MAX ]; do
    echo "Scoring for navigation # $COUNTER..."
    jython src/jython/tfidfCurrent.py outputnaive/docs_$COUNTER outputnaive/nav_$COUNTER/previous.txt &
    let THREADS=THREADS+1
    if [ $THREADS == 4 ]; then
        wait
        THREADS=0
    fi
    let COUNTER=COUNTER+1 
done
wait

THREADS=0
COUNTER=1

echo "Running naive models"
while [  $COUNTER -lt $MAX ]; do
    echo "Executing naive models for navigation # $COUNTER..."
    python src/python/naiveModels.py outputnaive/nav_$COUNTER/$FIXEDDB outputnaive/docs_$COUNTER/ outputnaive/nav_$COUNTER &
    let THREADS=THREADS+1
    if [ $THREADS == 4 ]; then
        wait
        THREADS=0
    fi
    let COUNTER=COUNTER+1 
done
wait

COUNTER=1

echo "Combining results..."
while [  $COUNTER -lt $MAX ]; do

    cat outputnaive/nav_$COUNTER/naiveTfidfCurrentMethod.csv >> outputnaive/naiveTfidfCurrentMethodAll.csv
    let COUNTER=COUNTER+1 
done

echo "Resetting TFIDF dirs"
rm -rf outputnaive/docs_* outputnaive/nav_*

echo "Creating document repository for TF-IDF class..."
python src/python/createNavFiles_classes.py data/$FIXEDDB outputnaive data/navList.txt

THREADS=0
COUNTER=1

echo "Scoring methods with TF-IDF..."
while [  $COUNTER -lt $MAX ]; do
    echo "Scoring for navigation # $COUNTER..."
    jython src/jython/tfidfCurrentClass.py outputnaive data/navList.txt &
    let THREADS=THREADS+1
    if [ $THREADS == 4 ]; then
        wait
        THREADS=0
    fi
    let COUNTER=COUNTER+1 
done
wait

echo "Merging results..."
python src/python/mergeClassNavResults.py data/navList.txt outputnaive outputnaive/naiveTfidfCurrentClassAll.csv

echo "Resetting TFIDF dirs"
rm -rf outputnaive/docs_* outputnaive/nav_*

echo "Done.  See .csv files in outputnaive directory for results."
